<html lang="en">
  <head>
    <link rel="shortcut icon" href="/images/plan.png">
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>{{PLAN}}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">

    <link rel="stylesheet" href="/stylesheets/styleA.css" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>

    <script src="/js/script.js"></script>
    <style>
    * {
      box-sizing: border-box;
    }

    input[type=text], select, textarea {
      width: 100%;
      padding: 12px;
      border: 1px solid #ccc;
      border-radius: 4px;
      resize: vertical;
    }

    label {
      padding: 12px 12px 12px 0;
      display: inline-block;
    }

    input[type=submit] {
      background-color: #04AA6D;
      color: white;
      padding: 12px 20px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      float: right;
    }

    input[type=submit]:hover {
      background-color: #45a049;
    }

    .container {
      border-radius: 5px;
      background-color: #f2f2f2;
      padding: 20px;
    }

    .col-25 {
      float: left;
      width: 25%;
      margin-top: 6px;
    }

    .col-75 {
      float: left;
      width: 75%;
      margin-top: 6px;
    }


    /* Clear floats after the columns */
    .row:after {
      content: "";
      display: table;
      clear: both;
    }

    /* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */
    @media screen and (max-width: 600px) {
      .col-25, .col-75, input[type=submit] {
        width: 100%;
        margin-top: 0;
      }
    }
    </style>

  </head>
  <body>
    <nav class="navbar navbar-dark bg-dark navbar-expand-lg">
  <div class="container-fluid">
    <a class="navbar-brand" href="/home/home-page">P L A N</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
     
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="/home/home-page">Home</a>
        </li>

        <li class="nav-item">
          <a class="nav-link active" href="/home/misEventos">My Events</a>
        </li>
      </ul>
          <a href="/auth/logout"><button class="btn btn-outline-success" type="submit">LOG OUT</button></a>

    </div>
  </div>
</nav>
    {{!-- <h1>üç±{{tipo}}üç±</h1>   <!--BORRAR DESPUES, SOLO ES IDENTIFICADOR DE LA PAGINA--> --}}


    {{#if formComida}}
    <div class="text-center">
        <img src="/images/detalle/dinner.png" class="img-fluid" alt="" width="750px" />
    </div>

    <!--AQUI VA EL DISE√ëO DE COMIDA IN DE DOS PERSONAS -->
    {{/if}}


    {{#if formPelicula}}
    <img src="https://image.tmdb.org/t/p/w300/bPIm1SXYp5RQ3c4wP91JQRewIb8.jpg?resize=300,450" alt="" />
       <!--AQUI VA EL DISE√ëO DE PELICULAS IN DE DOS PERSONAS -->
    {{/if}}

   {{#if formJuegos}}
    <img src="https://upload.wikimedia.org/wikipedia/pt/8/82/Gears_of_War.png" alt="" />
     <!--AQUI VA EL DISE√ëO DE JUEGOS IN DE DOS PERSONAS -->
    {{/if}}

<div class=reus> 
   <div id="Register" class=reus >
      {{!-- class="position-relative  start-50 translate-middle" --}}
      <form action="/registrarPlan/{{tipo}}" method="post" >

            <div class="container">
                  <legend>Enter an event</legend>
                <div class="row">

              <div class="col-25">
                <label for="fname">Name the event</label>
              </div>    
              <div class="col-75">
                <input type="text" class="form-control" placeholder="Name" name="name">
              </div>
          </div>

          <div class="row">
                  <div class="col-25">
              <label for="lname">Set a date</label>
              </div>
                <div class="col-75">
                    <input type="date" id="start" class="form-control" value="2022-07-13" min="2022-07-13" max="2050-12-31" placeholder="Date" name="date">
                  </div>
          </div>

          <div class="row">
              <div class="col-25">
                <label for="numberOfPeople">Number of assitants to the event</label>
              </div>
            <div class="col-75">
                <select id="numberOfPeople" name="numberOfPeople">
                      <option value="Two People">Two People</option>
                      <option value="More of People">More of People</option>
                </select>
              </div>
          </div>

          <div class="row">
                <div class="col-25">
                    <label for="subject">Subject</label>
                </div>
                <div class="col-75">
                    <textarea id="subject" name="description" placeholder="Write something..." style="height:200px"></textarea>
                </div>
                    
              <div class="col-25">
                <label for="fname">Address:</label>
              </div>
              <div class="col-75">
                  <input type="string" class="form-control" name="address">    
              </div>
          </div>


                <br>
                <br>
                <div class="row">
                  <button type="submit" value="Submit" class="btn btn-dark">Save</button>
                </div>
          </form>
      </div>
  </div>
  <br>
  <br>

<!--MAPA de PLACES-->
    <div  id="map-canvas">
    <div id="map"></div>
  </body>
  <script>
    function initMap() {
      geocoder = new google.maps.Geocoder();
      infowindow = new google.maps.InfoWindow();
      const cdmx = { lat: 19.4270, lng: -99.1697 };
      const map = new google.maps.Map(document.getElementById("map"), {
        zoom: 15,
        center: cdmx,
      });
      const marker = new google.maps.Marker({
            position: cdmx,
            map: map,
      });
      let markers= [];
      let service = new google.maps.places.PlacesService(map);
     function codeAddress() {
    var address = document.getElementById('address').value;
    geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == 'OK') {
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location
        });
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }
    }
    window.initMap = initMap;
    function initialize() {
  var markers = [];
  var map = new google.maps.Map(document.getElementById('map-canvas'), {
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });
  var defaultBounds = new google.maps.LatLngBounds(
      new google.maps.LatLng(-33.8902, 151.1759),
      new google.maps.LatLng(-33.8474, 151.2631));
  map.fitBounds(defaultBounds);
  // Create the search box and link it to the UI element.
  var input = /** @type {HTMLInputElement} */(
      document.getElementById('pac-input'));
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  var searchBox = new google.maps.places.SearchBox(
    /** @type {<input id="pac-input" class="controls" type="text" placeholder="Search Box">} */(input));
  // [START region_getplaces]
  // Listen for the event fired when the user selects an item from the
  // pick list. Retrieve the matching places for that item.
  google.maps.event.addListener(searchBox, 'places_changed', function() {
    var places = searchBox.getPlaces();
    if (places.length == 0) {
      return;
    }
    for (var i = 0, marker; marker = markers[i]; i++) {
      marker.setMap(null);
    }
    // For each place, get the icon, place name, and location.
    markers = [];
    var bounds = new google.maps.LatLngBounds();
    for (var i = 0, place; place = places[i]; i++) {
      var image = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25)
      };
      // Create a marker for each place.
      var marker = new google.maps.Marker({
        map: map,
        icon: image,
        title: place.name,
        position: place.geometry.location
      });
      markers.push(marker);
      bounds.extend(place.geometry.location);
    }
    map.fitBounds(bounds);
  });
  // [END region_getplaces]
  // Bias the SearchBox results towards places that are within the bounds of the
  // current map's viewport.
  google.maps.event.addListener(map, 'bounds_changed', function() {
    var bounds = map.getBounds();
    searchBox.setBounds(bounds);
  });
}
maps.event.addDomListener(window, 'load', initialize);
</script>
<script async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDLCjOoazxHbJusdbCU7a37IbsSZEwqGfc&libraries=places&callback=initMap"></script>
<br>
<br>
</html>